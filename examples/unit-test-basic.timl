structure CCTestBasic = struct

(* val a = 1 *)
(* val a = () *)
          
val x = 1 + 2
val y = x + 1
val z = x + y + x

val print = builtin "print" : string -- 1.0 --> unit
val str_int = builtin "str_int" : int -- 1.0 --> string
fun println s = let val () = print s in print "\n" end
val () = println (str_int z)
              
(* fun println s = print s; print "\n" *)
(* val () = println $ str_int z *)
              
(* val p = (1, ()) *)
          
(* val i = 1 *)
(* val u = () *)
(* val p = (i, u) *)
          
(* val foo = fn arg => arg + 1 *)

(* val a = foo 1 *)

(* fun f x = x + 1 *)

(* val a = f 2 *)

(* fun f x y = x + y *)

(* val a = f 1 2 *)

(* fun foo {i : Nat} {j | j > i} () = *)
(*     let *)
(*       fun bar (a : nat {i}, b : nat {j}) = *)
(*           a #+ b *)
(*       fun bar2 (a : nat {j}, b : nat {i}) = *)
(*           b #+ a *)
(*       fun bar3 (a : nat {j}, b : nat {i}) = *)
(*           a #+ b *)
(*     in *)
(*       () *)
(*     end *)
      
(* fun id arg = arg *)

(* val f = id *)

(* val a = f 1 *)

(* val a = f () *)

(* fun twice f x = f (f x) *)

(* fun fact_tail (n, acc) = *)
(*     if n  *)

end
