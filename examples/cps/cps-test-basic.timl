structure CPSTestBasic = struct

open Basic
       
val a = ()
          
val x = 1 + 2
val y = x + 1
val z = x + y + x
              
val f = fn y => y + 1
          
fun f x y = x + y

val a = f 1 2

val a = true
          
val neg1 =
 fn b =>
    case b of
        true => false
      | false => true

fun neg b =
    case b of
        true => false
      | false => true

val a = neg a

fun id x = x

(* fun foo {i : Nat} {j | j > i} () = *)
(*     let *)
(*       fun bar (a : nat {i}, b : nat {j}) = *)
(*           a #+ b *)
(*       fun bar2 (a : nat {j}, b : nat {i}) = *)
(*           b #+ a *)
(*     in *)
(*       () *)
(*     end *)
      
end
